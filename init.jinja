resources:
- name: service-account
  type: iam.v1.serviceAccount
  properties:
    accountId: {{ env['deployment'] }}-sa
    displayName: "Stream Security Service Account"

- name: service-account-key
  type: gcp-types/iam-v1:projects.serviceAccounts.keys
  properties:
    parent: $(ref.service-account.name)
    privateKeyType: TYPE_GOOGLE_CREDENTIALS_FILE
  metadata:
    dependsOn:
      - service-account

- name: service-account-viewer-role
  type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
  properties:
    resource: {{ env["project"] }}
    role: roles/viewer
    member: "serviceAccount:$(ref.service-account.email)"
  metadata:
    dependsOn:
      - service-account
      - service-account-key

- name: service-account-security-reviewer-role
  type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
  properties:
    resource: {{ env["project"] }}
    role: roles/iam.securityReviewer
    member: "serviceAccount:$(ref.service-account.email)"
  metadata:
    dependsOn:
      - service-account
      - service-account-key

- name: events-topic
  type: pubsub.v1.topic
  properties:
    topic: {{ env['deployment'] }}-events-topic
    messageRetentionDuration: 259200s

- name: ack-topic
  type: pubsub.v1.topic
  properties:
    topic: {{ env['deployment'] }}-ack-topic
    messageRetentionDuration: 259200s

- name: events-sink
  type: logging.v2.sink
  properties:
    sink: {{ env['deployment'] }}-events-sink
    destination: pubsub.googleapis.com/projects/{{ env["project"] }}/topics/{{ env['deployment'] }}-events-topic
    filter: (logName="projects/{{ env["project"] }}/logs/cloudaudit.googleapis.com%2Factivity" OR (logName="projects/{{ env["project"] }}/logs/cloudaudit.googleapis.com%2Fdata_access" AND NOT protoPayload.methodName=~"(?i).list")) AND protoPayload.methodName:* AND protoPayload.authenticationInfo.principalEmail:* AND NOT resource.type="k8s_cluster"

- name: ack-sink
  type: logging.v2.sink
  properties:
    sink: {{ env['deployment'] }}-ack-sink
    destination: pubsub.googleapis.com/projects/{{ env["project"] }}/topics/{{ env['deployment'] }}-ack-topic
    filter: resource.type="deployment" AND protoPayload.resourceName="projects/{{ env['project'] }}/global/deployments/{{ env['deployment'] }}" AND protoPayload.methodName="v2.deploymentmanager.deployments.insert" AND operation.last=true AND severity="NOTICE"

- name: events-publish-role
  type: gcp-types/pubsub-v1:pubsub.projects.topics.setIamPolicy
  properties:
    resource: $(ref.events-topic.name)
    policy:
      bindings:
        - role: roles/pubsub.publisher
          members:
            - "serviceAccount:cloud-logs@system.gserviceaccount.com"
            - "serviceAccount:service-{{ env['project_number'] }}@gcp-sa-logging.iam.gserviceaccount.com"
  metadata:
    dependsOn:
      - events-sink

- name: ack-publish-role
  type: gcp-types/pubsub-v1:pubsub.projects.topics.setIamPolicy
  properties:
    resource: $(ref.ack-topic.name)
    policy:
      bindings:
      - role: roles/pubsub.publisher
        members:
        - "serviceAccount:cloud-logs@system.gserviceaccount.com"
        - "serviceAccount:service-{{ env['project_number'] }}@gcp-sa-logging.iam.gserviceaccount.com"
  metadata:
    dependsOn:
      - ack-sink

- name: events-function
  type: gcp-types/cloudfunctions-v1:projects.locations.functions
  properties:
    parent: projects/{{ env["project"] }}/locations/{{ properties['region'] }}
    function: {{ env['deployment'] }}-events-function
    runtime: nodejs20
    timeout: 5s
    entryPoint: streamsec-audit-logs-collector
    sourceArchiveUrl: gs://{{ properties['bucket'] }}/gcp-events-collection.zip
    eventTrigger:
      eventType: google.pubsub.topic.publish
      resource: $(ref.events-topic.name)
    environmentVariables:
      API_URL: {{ properties['apiUrl'] }}
      API_TOKEN: {{ properties['apiToken'] }}
  metadata:
    dependsOn:
      - events-publish-role

- name: ack-function
  type: gcp-types/cloudfunctions-v1:projects.locations.functions
  properties:
    parent: projects/{{ env['project'] }}/locations/{{ properties['region'] }}
    function: {{ env['deployment'] }}-ack-function
    runtime: python312
    entryPoint: process_log_event
    eventTrigger:
      eventType: google.pubsub.topic.publish
      resource: $(ref.ack-topic.name)
    sourceArchiveUrl: gs://{{ properties['bucket'] }}/gcp-init-ack.zip
    environmentVariables:
      API_URL: {{ properties['apiUrl'] }}
      API_TOKEN: {{ properties['apiToken'] }}
      SERVICE_ACCOUNT_KEY: $(ref.service-account-key.privateKeyData)
  metadata:
    dependsOn:
      - ack-publish-role